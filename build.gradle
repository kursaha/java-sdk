plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

group = "com.kursaha"
version '0.0.9'

sourceCompatibility=11
targetCompatibility=11
assert System.properties["java.specification.version"] == "11" || "12" || "13" || "14" || "15" || "16" || "17" || "18"

repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    repositories {
        maven {
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
            def releasesRepoUrl = "https://s01.oss.sonatype.org/content/repositories/releases/"
            def snapshotsRepoUrl = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

        }
    }
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'java-sdk'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Kursaha SDK'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'SDK used to connect to Kursaha services.'
                url = 'https://docs.kursaha.com/java-sdk'

                scm {
                    connection = 'scm:svn:https://github.com/kursaha/java-sdk/tree/main'
                    developerConnection = 'scm:svn:https://github.com/kursaha/java-sdk/tree/dev'
                    url = 'https://github.com/kursaha/java-sdk/tree/main'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'KursahaTech'
                        name = 'Kursaha Tech'
                        email = 'hello@kursaha.com'
                    }
                }
            }
        }
    }
}


signing {
   sign publishing.publications.mavenJava
}


javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.0.2'

    // test dependencies
    testCompileOnly 'org.projectlombok:lombok:1.18.24'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.24'
    testImplementation 'org.mockito:mockito-core:5.1.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.0.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
}
